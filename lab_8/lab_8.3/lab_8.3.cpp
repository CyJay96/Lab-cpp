/*

Дата сдачи: 12.04.2021

Объявить класс «многоразрядное целое число». Количество разрядов числа хранить в поле класса,
значения разрядов числа хранить в динамической памяти, основание системы счисления задавать константой.
Реализовать:
1) три вида конструктора (без аргументов, инициализации, копирования);
2) деструктор;
3) перегрузить операции ввода/вывода данных;
4) перегрузить оператор индексирования [] для доступа к разрядам числа;
5) операции в задании реализовать посредством перегрузки.
Объявление класса разместить в заголовочном файле, определения методов – во втором файле, определение главной функций программы – в третьем файле.
При переполнении старшего разряда лишние биты теряются.
Примечание.
Оператор умножения многоразрядных чисел удобно реализовать через более простые перегруженные операторы:
умножение многоразрядного числа на одноразрядное число, сдвиг многоразрядного числа на целое число разрядов, сложение многоразрядных чисел.
Оператор деления многоразрядных чисел удобно реализовать через более простые перегруженные операторы:
сдвиг многоразрядного числа на целое число разрядов, сравнение и вычитание многоразрядных чисел.
Выполнить задание, используя объекты этого класса.

Объявить класс «64-разрядное целое двоичное число со знаком» (использовать дополнительный двоичный код).
Реализовать операции: сложения, умножения, операцию возведения в степень. Вычислить 3^12 + (-3)^11 + 3^10 + (-3)^9.

*/


#include <iostream>
#include <conio.h>
#include "Number.h"

using namespace std;

int main() {
	Number three = 3;
	Number mThree = -3;

	Number a = three ^ 12;
	Number b = mThree ^ 11;
	Number c = three ^ 10;
	Number d = mThree ^ 9;

	Number result = a + b + c + d;

	cout << "3^12 + (-3)^11 + 3^10 + (-3)^9 = " << result << endl;

	cout << endl << "Press any key to continue..." << endl;
	_getch();

	return 0;
}
